name: Tag Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version number (⚠️Semver, no 'v' prefix⚠️)"
        required: true

jobs:
  tag:
    runs-on: ubuntu-latest

    steps:
      - name: Validate version
        id: validate_version
        run: |
          if [[ "${{ github.event.inputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+(-.+)?$ ]];
          then
            exit 0
          else
            echo "${{ github.event.inputs.version }} must be a SemVer (<Number>.<Number>.<Number>[-<PRERELEASE>]) e.g. 3.1.2 or 1.42.13-ALPHA1"
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Git
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'

      - name: Create tags
        run: |
          MAYOR=$(echo "${{ github.event.inputs.version }}" | cut --delimiter=. --fields=1);
          MINOR=$(echo "${{ github.event.inputs.version }}" | cut --delimiter=. --fields=2);
          PATCH_PRERELEASE=$(echo "${{ github.event.inputs.version }}" | cut --delimiter=. --fields=3);
          PATCH=$(echo "$PATCH_PRERELEASE" | cut --delimiter=- --fields=1);

          # Required as checkout-action.fetch-tags not working (see https://github.com/actions/checkout/issues/1471)
          git fetch --tags >/dev/null 2>&1;

          if [[ "${PATCH}" == "${PATCH_PRERELEASE}" ]];
          then
            # We only move tags if it is a 'final' release

            # Do not force full qualified version, fail if exists is desired!
            git tag v${MAYOR}.${MINOR}.${PATCH};
            git tag -f v${MAYOR}.${MINOR};
            git tag -f v${MAYOR};
            git tag -f latest;

            git push origin --tags -f;
          else
            # Also no force of pre-releases if required/wanted do it manually
            git tag v${{ github.event.inputs.version }};
            git push origin --tags;
          fi
