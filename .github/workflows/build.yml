name: "Build"

on:
  push:
    branches:
      - main
      - develop
      - issues/**
      - feature/**
      - renovate/**

env:
  FOSSA_TELEMETRY_SCOPE: off

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - name: "Print github data"
        run: |
          echo "event_name: '${{ github.event_name }}'"
          echo "workspace: '${{ github.workspace }}'"
          echo "(pull_request) event.head.ref: '${{ github.event.head.ref }}'"
          echo "(push) event.ref: '${{ github.event.ref }}'"

  onlyDevel:
    runs-on: ubuntu-latest
    if: |
      contains(github.event.ref, 'develop') &&
      github.event_name == 'push'
    steps:
      - name: "Print"
        run: echo "Exec on develop bransh on push"

  init:
    name: "Init"
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.extract_branch.outputs.branch }}
    steps:
      - uses: actions/checkout@v3

      - name: Extract branch name
        id: extract_branch
        run: echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT

      - name: "Fossa cache"
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/**
          key: ${{ runner.os }}-fossa-${{ github.run_id }}

      - name: "get fossa"
        run: |
          curl -H 'Cache-Control: no-cache' https://raw.githubusercontent.com/fossas/fossa-cli/master/install-latest.sh > install.sh
          sudo bash install.sh -b .

  staticDetektCheck:
    name: "Detekt - static check"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: "Reports cache"
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/build/test-results/**
            ${{ github.workspace }}/build/jacoco/**
            ${{ github.workspace }}/build/reports/**
          key: ${{ runner.os }}-reports-${{ github.run_id }}

      - name: "Detekt"
        run: ${{ github.workspace }}/gradlew detekt

  staticFossaCheck:
    name: "Fossa licence analyze - static check"
    runs-on: ubuntu-latest
    needs: init
    steps:
      - name: "Fossa cache"
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/**
          key: ${{ runner.os }}-fossa-${{ github.run_id }}
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: "Fossa analyze"
        env:
          FOSSA_API_KEY: ${{ secrets.FOSSA_API_KEY }}
        run: ${{ github.workspace }}/fossa analyze --branch ${{ needs.init.outputs.branch }}

  compile:
    runs-on: ubuntu-latest
    needs: init
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: "Load compile cache"
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/build/classes/**
            ${{ github.workspace }}/build/kotlin/**
            ${{ github.workspace }}/.gradle
          key: ${{ runner.os }}-compile-${{ github.run_id }}

      - name: "Compile"
        run: ${{ github.workspace }}/gradlew classes

  test:
    runs-on: ubuntu-latest
    needs: compile
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: "Load compile cache"
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/build/classes/**
            ${{ github.workspace }}/build/kotlin/**
          key: ${{ runner.os }}-compile-${{ github.run_id }}

      - name: "Reports cache"
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/build/test-results/**
            ${{ github.workspace }}/build/jacoco/**
            ${{ github.workspace }}/build/reports/**
          key: ${{ runner.os }}-reports-${{ github.run_id }}

      - name: "Unit test"
        run: ${{ github.workspace }}/gradlew test jacocoTestReport

      - name: Report test results
        uses: EnricoMi/publish-unit-test-result-action@v2.3.0
        if: always()
        with:
          junit_files: ${{ github.workspace }}/build/test-results/**/*.xml

  licenceCheck:
    runs-on: ubuntu-latest
    needs:
      - compile
      - staticFossaCheck
    steps:
      - name: "Fossa cache"
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/**
          key: ${{ runner.os }}-fossa-${{ github.run_id }}

      - name: "Fossa check license"
        env:
          FOSSA_API_KEY: ${{ secrets.FOSSA_API_KEY }}
        run: ${{ github.workspace }}/fossa test

  report:
    if: always()
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - name: "Reports cache"
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/build/test-results/**
            ${{ github.workspace }}/build/jacoco/**
            ${{ github.workspace }}/build/reports/**
          key: ${{ runner.os }}-reports-${{ github.run_id }}

      - name: "Generate Report"
        uses: codecov/codecov-action@v3.1.1

  publish:
    runs-on: ubuntu-latest
    needs:
      - report
      - licenceCheck
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: "Load compile cache"
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/**
          key: ${{ runner.os }}-compile-${{ github.run_id }}

      - name: "Publish"
        env:
          USERNAME: ${{ github.actor }}
          TOKEN: ${{ github.token }}
        run: ${{ github.workspace }}/gradlew bootJar publish
